<div className="max-w-sm mx-auto bg-white rounded-2xl shadow-sm overflow-hidden">
        {/* Header */}
        <div className="bg-white p-6 border-b border-gray-100">
          <div className="flex justify-between items-center mb-2">
            <h1 className="text-xl font-semibold text-gray-900">Today</h1>
            <button 
              onClick={openPlanner}
              className="text-sm text-gray-500 hover:text-gray-700 transition-colors"
            >
              Plan →
            </button>
          </div>
          <p className="text-sm text-gray-500">
            {today.toLocaleDateString('en-US', { 
              weekday: 'long', 
              day: 'numeric', 
              month: 'long' 
            })}
          </p>
        </div>

        {/* Formulaire d'ajout rapide */}
        <div className="p-6 border-b border-gray-100">
          <form onSubmit={handleAddTodo} className="flex gap-3">
            <input
              type="text"
              value={newTodoText}
              onChange={(e) => setNewTodoText(e.target.value)}
              placeholder="Add new task"
              className="flex-1 px-4 py-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm"
            />
            <button
              type="submit"
              className="bg-gray-900 text-white px-4 py-3 rounded-lg hover:bg-gray-800 transition-colors"
            >
              <span className="text-sm">+</span>
            </button>
          </form>
        </div>

        {/* Liste des todos */}
        <div className="p-6">
          {error && (
            <div className="bg-red-50 text-red-700 p-3 rounded-lg mb-4 text-sm">
              {error}
            </div>
          )}

          {todayTodos.length === 0 ? (
            <div className="text-center text-gray-500 py-12">
              <div className="text-3xl mb-3">✨</div>
              <p className="text-sm">No tasks for today</p>
              <p className="text-xs text-gray-400">Enjoy your day!</p>
            </div>
          ) : (
            <div className="space-y-3">
              {todayTodos.map((todo) => (
                <div
                  key={todo.id}
                  className="flex items-center gap-4 py-3 px-3 hover:bg-gray-50 rounded-lg group transition-colors"
                >
                  <button
                    onClick={() => toggleTodo(todo.id)}
                    className={`w-5 h-5 rounded-full border-2 flex items-center justify-center transition-colors ${
                      todo.status === TodoStatus.Completed
                        ? 'bg-green-500 border-green-500 text-white'
                        : 'border-gray-300 hover:border-gray-400'
                    }`}
                  >
                    {todo.status === TodoStatus.Completed && (
                      <svg className="w-3 h-3" fill="currentColor" viewBox="0 0 20 20">
                        <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                      </svg>
                    )}
                  </button>
                  
                  <div className="flex-1">
                    <p className={`text-sm ${
                      todo.status === TodoStatus.Completed
                        ? 'line-through text-gray-500'
                        : 'text-gray-900'
                    }`}>
                      {todo.text}
                    </p>
                    {todo.due_date && (
                      <p className="text-xs text-orange-600 mt-1">
                        Due: {new Date(todo.due_date).toLocaleDateString()}
                      </p>
                    )}
                  </div>

                  <div className={`w-2 h-2 rounded-full ${getPriorityColor(todo.priority)}`}></div>
                </div>
              ))}
            </div>
          )}
        </div>
      </div>